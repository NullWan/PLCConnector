server:
  port: 8089

#spring:
#  kafka:
#    # 用逗号分隔的主机:端口对列表，用于建立到Kafka群集的初始连接。覆盖全局连接设置属性
#    bootstrap-servers: 192.168.134.140:9092
#    #生产者属性
#    producer:
#      #如果遇到可恢复的错误（如网络问题），消息重发的次数。OPC对实时性要求高，不开启重试
#      retries: 0
#      # 键的序列化方式
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      # 值的序列化方式
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
#      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
#      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
#      acks: 0
#      #生产者会将多个消息批量发送到服务器，以提高效率。这个参数指定了每个批次的大小（以字节为单位）。
#      batch-size: 16384
#      #生产者用来缓冲等待被发送到服务器的记录的总内存大小。如果数据产生速度超过发送到服务器的速度，缓冲区将被填满，导致数据发送阻塞或抛出异常。
#      buffer-memory: 33554432
#
#    #消费者属性
#    consumer:
#      #控制消费者（Consumer）自动提交偏移量（Offset）的时间间隔  enable-auto-commit: false 时，此处不生效
#      auto-commit-interval: 500ms
#      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
#      # latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
#      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
#      auto-offset-reset: latest
#      # 是否自动提交偏移量，默认值是true,为了避免出现重复数据和数据丢失，可以把它设置为false,然后手动提交偏移量
#      enable-auto-commit: false
#      # 键的反序列化方式
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      # 值的反序列化方式
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#
#      group-id: opcGroup
#      max-poll-records: 4000
#
#    listener:
#      # 在侦听器容器中运行的线程数。
#      concurrency: 5
#      #listner负责ack，每调用一次，就立即commit
#      ack-mode: manual_immediate
#      missing-topics-fatal: false